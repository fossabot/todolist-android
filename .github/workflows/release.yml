---
name: Release

on:
  pull_request:
    types: [closed]
    branches:
      - master

jobs:
  release:
    if: github.event.pull_request.merged == true
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --prune --unshallow
      - uses: actions/setup-node@v1
        with:
          node-version: 10.20.1
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Make Gradle executable
        run: chmod +x ./gradlew
      - name: Install dependencies
        run: |
          npm install yarn
          yarn install
      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          export VERSION=$(npm run next-version | tail -1)
          export DESCRIPTION=$(yarn run standard-version --dry-run --silent | grep -v yarn | grep -v Done | grep -v "\-\-\-" | grep -v standard-version)
          echo "::set-env name=DESCRIPTION::$DESCRIPTION"
          echo "::set-env name=VERSION::$VERSION"
          sed -i "s/versionCode = .*/versionCode = ${GITHUB_RUN_NUMBER}/g" app/build.gradle.kts
          sed -i "s/versionName = .*/versionName = \"${VERSION}\"/g" app/build.gradle.kts
          git add app/build.gradle.kts
          git commit --no-verify -m "chore: update version code, name"
          yarn release
          git push --follow-tags origin master
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true
      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          body: |
            ${{ env.DESCRIPTION }}
          draft: false
          prerelease: false
